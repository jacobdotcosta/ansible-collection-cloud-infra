---
- name: Destroy
  hosts: localhost
  connection: local
  gather_facts: false
  no_log: "{{ molecule_no_log }}"

  pre_tasks:
    - name: "Set test facts"
      ansible.builtin.set_fact:
        vm_name: ansible_molecule_snowdrop_openstack_test

    - name: "Set openstack_auth facts"
      ansible.builtin.set_fact:
        rhos_auth_pw_type: v3password
        rhos_auth_pw: 
          project_name: "{{ query('passwordstore', 'openstack/host/project_name')[0] }}"
          username:  "{{ query('passwordstore', 'openstack/host/console_user')[0] }}"
          password: "{{ query('passwordstore', 'openstack/host/console_pw')[0] }}"
          user_domain_name:  "{{ query('passwordstore', 'openstack/host/console_domain')[0] }}"
          project_domain_name: "{{ query('passwordstore', 'openstack/host/os_domain')[0] }}"
          auth_url: "{{ query('passwordstore', 'openstack/host/os_auth_url')[0] }}"

    - name: Include default vars
      ansible.builtin.include_vars:
        file: defaults/main.yml

    - name: Set authentication vars
      ansible.builtin.set_fact:
        rhos_auth:
          auth_url: "{{ rhos_auth_pw.auth_url }}"
          project_name: "{{ query('passwordstore', 'openstack/host/project_name')[0] }}"
          username: "{{ query('passwordstore', 'openstack/host/console_user')[0] }}"
          password: "{{ query('passwordstore', 'openstack/host/console_pw')[0] }}"
          user_domain_name: "{{ query('passwordstore', 'openstack/host/console_domain')[0] }}"
          project_domain_name: "{{ query('passwordstore', 'openstack/host/os_domain')[0] }}"
          # token: "{{ rhos_auth_res.auth_token }}"
        # v3token
        rhos_auth_type: v3password

  tasks:

    - name: "Delete OpenStack VM"
      ansible.builtin.include_role:
        name: "openstack_vm"
      vars: 
        state: "absent"

    - name: "Delete host from known hosts"
      ansible.builtin.known_hosts:
        name: "{{ hostvars[vm_name]['ansible_ssh_host'] }}"
        state: absent
      when: "hostvars[vm_name]['ansible_ssh_host'] is defined"
      failed_when: false

    # Mandatory configuration for Molecule to function.

    - name: Populate instance config
      ansible.builtin.set_fact:
        instance_conf: {}

    - name: Dump instance config
      ansible.builtin.copy:
        content: |
          # Molecule managed

          {{ instance_conf | to_json | from_json | to_yaml }}
        dest: "{{ molecule_instance_config }}"
        mode: 0600
      when: server.changed | default(false) | bool

...
