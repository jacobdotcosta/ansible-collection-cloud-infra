---
- name: Create
  hosts: localhost
  connection: local
  gather_facts: false
  no_log: "{{ molecule_no_log }}"

  pre_tasks:
    - name: "Set test facts"
      ansible.builtin.set_fact:
        vm_name: ansible_molecule_snowdrop_openstack_test

    - name: Include default vars
      ansible.builtin.include_vars:
        file: defaults/main.yml
        # name: role_defaults

    - name: "Set openstack VM required facts"
      ansible.builtin.set_fact:
        openstack: 
          vm: 
            network: "{{ openstack_defaults.vm.network }}"
            image: "{{ openstack_defaults.vm.image }}"
            flavor: "{{ openstack_defaults.vm.flavor }}"

    - name: "Set openstack_auth facts"
      ansible.builtin.set_fact:
        rhos_auth_pw_type: v3password
        rhos_auth_pw: 
          project_name: "{{ query('passwordstore', 'openstack/host/project_name')[0] }}"
          username:  "{{ query('passwordstore', 'openstack/host/console_user')[0] }}"
          password: "{{ query('passwordstore', 'openstack/host/console_pw')[0] }}"
          user_domain_name:  "{{ query('passwordstore', 'openstack/host/console_domain')[0] }}"
          project_domain_name: "{{ query('passwordstore', 'openstack/host/os_domain')[0] }}"
          auth_url: "{{ query('passwordstore', 'openstack/host/os_auth_url')[0] }}"

    - name: Set authentication vars
      ansible.builtin.set_fact:
        rhos_auth:
          auth_url: "{{ rhos_auth_pw.auth_url }}"
          project_name: "{{ query('passwordstore', 'openstack/host/project_name')[0] }}"
          username: "{{ query('passwordstore', 'openstack/host/console_user')[0] }}"
          password: "{{ query('passwordstore', 'openstack/host/console_pw')[0] }}"
          user_domain_name: "{{ query('passwordstore', 'openstack/host/console_domain')[0] }}"
          project_domain_name: "{{ query('passwordstore', 'openstack/host/os_domain')[0] }}"
          # token: "{{ rhos_auth_res.auth_token }}"
        # v3token
        rhos_auth_type: v3password

  tasks:

    - name: "Create VM"
      ansible.builtin.include_role:
        name: "openstack_vm"
      vars: 
        state: "present"

    - name: "Show IP addresses"
      ansible.builtin.debug:
        msg: "VM IP V4: {{ openstack_vm_ipv4 }}"

    - name: "Wait for connection to host"
      ansible.builtin.wait_for:
        host: "{{ openstack_vm_ipv4 }}"
        port: "22"
        timeout: 120
      register: wait_for_connection_reg
    
    - name: "Set server changed"
      ansible.builtin.set_fact:
        server:
          changed: true | bool

    - when: server.changed | default(false) | bool
      block:
        - name: Populate instance config dict
          ansible.builtin.set_fact:
            instance_conf_dict: {
              'instance': "{{ }}",
              'address': "{{ }}",
              'user': "{{ }}",
              'port': "{{ }}",
              'identity_file': "{{ }}", }
          with_items: "{{ server.results }}"
          register: instance_config_dict

        - name: Convert instance config dict to a list
          ansible.builtin.set_fact:
            instance_conf: "{{ instance_config_dict.results | map(attribute='ansible_facts.instance_conf_dict') | list }}"

        - name: Dump instance config
          ansible.builtin.copy:
            content: |
              # Molecule managed

              {{ instance_conf | to_json | from_json | to_yaml }}
            dest: "{{ molecule_instance_config }}"
            mode: 0600

...
